apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: rabbitmq-probes
  labels:
    app.kubernetes.io/name: rabbitmq-probes
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: helm
data:
  # Define the script used by our readiness probe.
  readiness.sh: |
    #!/usr/bin/env bash
    # This API will return "ok" if there are no active alarms - in that case we're definitely ready
    # for traffic.  However, for our purposes active alarms may be fine, so we need to do further
    # tests if this fails.
    WGET_OUTPUT="$(wget -qO- monitoring:monitoring@localhost:15672/api/healthchecks/node)"
    if [[ "$WGET_OUTPUT" = '{"status":"ok"}' ]]; then
      exit 0
    fi
    # Did this fail due to resource alarms?
    REGEX='^\{"status":"failed","reason":"resource alarm\(s) in effect:\[.*]"}$'
    if [[ "$WGET_OUTPUT" =~ $REGEX ]]; then
      exit 0
    fi
    # If this command failed for some other reason, say we're not ready.
    echo "Unable to determine readiness from '$WGET_OUTPUT'"
    # To investigate such a failure, execute the script manually:
    # kubectl exec --namespace=<NAMESPACE> <POD> -- /probes/readiness.sh
    # You can add debugging output to this script and reapply this file; allow a few minutes for
    # such changes to take effect.
    exit 1
